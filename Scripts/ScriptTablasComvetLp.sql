/*==============================================================*/
/* COMVET - LP name:      MYSQL Version                         */
/*==============================================================*/

-- ================================================
-- Creando la Base de Datos DB_SIASC
-- ================================================

CREATE DATABASE DB_SIASC;

-- ================================================
-- Utilizando la Base de Datos ComvetLpV
-- ================================================

USE DB_SIASC;

-- ================================================
-- TABLA COLEGIADO
-- ================================================
DROP TABLE IF EXISTS COLEGIADO;
CREATE TABLE COLEGIADO(
ID_COLEGIADO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
CI VARCHAR(20),
EXPEDIDO VARCHAR(10),
MATRICULA VARCHAR(20),
PRIMER_NOMBRE VARCHAR(50),
SEGUNDO_NOMBRE VARCHAR(50),
PATERNO VARCHAR(20),
MATERNO VARCHAR(20),
GENERO VARCHAR(10),
FECHA_NACIMIENTO TIMESTAMP(6),
GRUPO_SANGUINEO VARCHAR(5),-- VALORES ORH+ Y ORH-
FOTO BIGINT(10),
FECHA_INGRESO_COMVETLP TIMESTAMP(6),
UNIVERSIDAD_EGRESO VARCHAR(255),
DOMICILIO VARCHAR(255),
COSTO_INSCRIPCION INT(10),
EXAMEN_TESIS INT(10),

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_COLEGIADO PRIMARY KEY (ID_COLEGIADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA CORREO ELECTRONICO
-- ================================================
DROP TABLE IF EXISTS CORREO_ELECTRONICO;
CREATE TABLE CORREO_ELECTRONICO(
ID_CORREO_ELECTRONICO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
CORREO_ELECTRONICO VARCHAR(255),
ID_COLEGIADO INT(19),-- CLAVE FORANEA COLEGIADO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_CORREO_ELECTRONICO PRIMARY KEY (ID_CORREO_ELECTRONICO),
CONSTRAINT FK_ID_COLEGIADO_CORE FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA COLEGIATURAS
-- ================================================
DROP TABLE IF EXISTS COLEGIATURA;
CREATE TABLE COLEGIATURA(
ID_COLEGIATURA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
CUOTA INT(19),
MODALIDAD VARCHAR(20),

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_COLEGIATURA PRIMARY KEY (ID_COLEGIATURA)
)ENGINE=INNODB;


-- ================================================
-- TABLA PAGO COLEGIATURAS
-- ================================================
DROP TABLE IF EXISTS PAGO;
CREATE TABLE PAGO(
ID_PAGO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
ID_COLEGIADO INT(19), -- CLAVE FORANEA COLEGIADO
ID_COLEGIATURA INT(19),-- CLAVE FORANEA COLEGIATURA
VIGENCIA TIMESTAMP(6),
DESCRIPCION VARCHAR(255),

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_PAGO PRIMARY KEY (ID_PAGO),
CONSTRAINT FK_ID_COLEGIADO_PAGO FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO),
CONSTRAINT FK_ID_COLEGIATURA FOREIGN KEY (ID_COLEGIATURA) REFERENCES COLEGIATURA (ID_COLEGIATURA)
)ENGINE=INNODB;

-- ================================================
-- TABLA VETERINARIAS
-- ================================================
DROP TABLE IF EXISTS VETERINARIA;
CREATE TABLE VETERINARIA(
ID_VETERINARIA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
VETERINARIA VARCHAR(255),
ZONA VARCHAR(255),
DIRECCION VARCHAR(255),
DESCRIPCION VARCHAR(255),
ID_COLEGIADO INT(19), -- CLAVE FORANEA COLEGIADO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_VETERINARIA PRIMARY KEY (ID_VETERINARIA),
CONSTRAINT FK_ID_COLEGIADO_VETE FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA TELEFONOS DE VETERINARIAS
-- ================================================
DROP TABLE IF EXISTS TELEFONO_VETERINARIA;
CREATE TABLE TELEFONO_VETERINARIA(
ID_TELEFONO_VETERINARIA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
TIPO VARCHAR(20),-- VALORES CELULAR Y TELEFONO
TELEFONO VARCHAR(20),
ID_VETERINARIA INT(19),-- CLAVE FORANEA VETERINARIA

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_TELEFONO_VETERINARIA PRIMARY KEY (ID_TELEFONO_VETERINARIA),
CONSTRAINT FK_ID_VETERINARIA_TELE FOREIGN KEY (ID_VETERINARIA) REFERENCES VETERINARIA (ID_VETERINARIA)
)ENGINE=INNODB;

-- ================================================
-- TABLA ESTUDIOS DE LOS COLEGIADOS
-- ================================================
DROP TABLE IF EXISTS ESTUDIO;
CREATE TABLE ESTUDIO(
ID_ESTUDIO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
TIPO VARCHAR(50),-- VALORES DIPLOMADO, MAESTRIA, DOCTORADO, ESPECIALIDAD Y OTROS
ESTUDIO VARCHAR(255),
DESCRIPCION VARCHAR(255),
FECHA_REALIZADA TIMESTAMP(6),
ID_COLEGIADO INT(19),-- CLAVE FORANEA COLEGIADO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_ESTUDIO PRIMARY KEY (ID_ESTUDIO),
CONSTRAINT FK_ID_COLEGIADO_ESTU FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA CERTIFICADOS
-- ================================================
DROP TABLE IF EXISTS CERTIFICADO;
CREATE TABLE CERTIFICADO(
ID_CERTIFICADO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
CERTIFICADO VARCHAR(255),
PRECIO INT(19),
-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_CERTIFICADO PRIMARY KEY (ID_CERTIFICADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA RELACION ENTRE COLEGIADO Y CERTIFICADO
-- ================================================
DROP TABLE IF EXISTS ADQUIERE;
CREATE TABLE ADQUIERE(
ID_ADQUIERE INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
ID_COLEGIADO INT (19),-- CLAVE FORANEA COLEGIADO
ID_CERTIFICADO INT (19),-- CLAVE FORANEA CERTIFICADO
CANTIDAD INT(19),

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_ADQUIERE PRIMARY KEY (ID_ADQUIERE),
CONSTRAINT FK_ID_COLEGIADO_ADQUI FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO),
CONSTRAINT FK_ID_CERTIFICADO FOREIGN KEY (ID_CERTIFICADO) REFERENCES CERTIFICADO (ID_CERTIFICADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA IDIOMA
-- ================================================
DROP TABLE IF EXISTS IDIOMA;
CREATE TABLE IDIOMA(
ID_IDIOMA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
IDIOMA VARCHAR(50),

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_IDIOMA PRIMARY KEY (ID_IDIOMA)
)ENGINE=INNODB;

-- ================================================
-- TABLA DE RELACION ENTRE COLEGIADO Y IDIOMA
-- ================================================
DROP TABLE IF EXISTS HABLA;
CREATE TABLE HABLA(
ID_HABLA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
ID_COLEGIADO INT(19),-- CLAVE FORANEA COLEGIADO
ID_IDIOMA INT(19),-- CLAVE FORANEA IDIOMA
NIVEL VARCHAR(50),-- NIVEL DE EXPERIENCIA

CONSTRAINT PK_ID_HABLA PRIMARY KEY (ID_HABLA),
CONSTRAINT FK_ID_COLEGIADO_HABL FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO),
CONSTRAINT FK_ID_IDIOMA FOREIGN KEY (ID_IDIOMA) REFERENCES IDIOMA (ID_IDIOMA)
)ENGINE=INNODB;

-- ================================================
-- TABLA TELEFONOS DEL COLEGIADO
-- ================================================
DROP TABLE IF EXISTS TELEFONO;
CREATE TABLE TELEFONO(
ID_TELEFONO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
TIPO VARCHAR(20),-- VALORES CELULAR Y TELEFONO
TELEFONO VARCHAR(20),
ID_COLEGIADO INT(19),-- CLAVE FORANEA COLEGIADO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_TELEFONO PRIMARY KEY (ID_TELEFONO),
CONSTRAINT FK_ID_COLEGIADO_TELEF FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO)
)ENGINE=INNODB;

-- ================================================
-- TABLA DIRECTIVA
-- ================================================
DROP TABLE IF EXISTS DIRECTIVA;
CREATE TABLE DIRECTIVA(
ID_DIRECTIVA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
GESTION TIMESTAMP(6),-- VALORES 2017, 2018, 2019, 2020, ...
DESCRIPCION VARCHAR(255),
-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_DIRECTIVA PRIMARY KEY (ID_DIRECTIVA)
)ENGINE=INNODB;

-- ================================================
-- TABLA ACUMULADO DE LA DIRECTIVA
-- ================================================
DROP TABLE IF EXISTS ACUMULADO;
CREATE TABLE ACUMULADO(
ID_ACUMULADO INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
TIPO VARCHAR(50),-- VALORES CAJA CHICA, EGRESOS Y INGRESOS
MONTO INT(19),
DETALLE VARCHAR(255),
FACTURA VARCHAR(255),
OBSERVACIONES VARCHAR(255),
ID_DIRECTIVA INT(19),-- CLAVE FORANEA DIRECTIVA
-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_ACUMULADO PRIMARY KEY (ID_ACUMULADO),
CONSTRAINT FK_ID_DIRECTIVA_ACUM FOREIGN KEY (ID_DIRECTIVA) REFERENCES DIRECTIVA (ID_DIRECTIVA)
)ENGINE=INNODB;

-- ================================================
-- TABLA INTEGRANTES DE LA DIRECTIVA
-- ================================================
DROP TABLE IF EXISTS INTEGRANTE;
CREATE TABLE INTEGRANTE(
ID_INTEGRANTE INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
INTEGRANTE VARCHAR(100),
CARGO VARCHAR(255),
ID_DIRECTIVA INT(19),-- CLAVE FORANEA DIRECTIVA
ID_COLEGIADO INT(19),-- CLAVE FORANEA COLEGIADO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_INTEGRANTE PRIMARY KEY (ID_INTEGRANTE),
CONSTRAINT FK_ID_DIRECTIVA_INTE FOREIGN KEY (ID_DIRECTIVA) REFERENCES DIRECTIVA (ID_DIRECTIVA),
CONSTRAINT FK_ID_COLEGIADO_INTE FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO)
)ENGINE=INNODB;
	
-- ================================================
-- TABLA DE RELACION ENTRE COLEGIADO Y DIRECTIVA
-- ================================================
DROP TABLE IF EXISTS ADMINISTRA;
CREATE TABLE ADMINISTRA(
ID_ADMINISTRA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
ID_COLEGIADO INT(19),-- CLAVE FORANEA COLEGIADO
ID_DIRECTIVA INT(19),-- CLAVE FORANEA DIRECTIVA
FECHA TIMESTAMP(6), -- FECHA DE REGISTRO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_ADMINISTRA PRIMARY KEY (ID_ADMINISTRA),
CONSTRAINT FK_ID_COLEGIADO_ADMI FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO),
CONSTRAINT FK_ID_DIRECTIVA_ADMI FOREIGN KEY (ID_DIRECTIVA) REFERENCES DIRECTIVA (ID_DIRECTIVA)
)ENGINE=INNODB;

-- ================================================
-- TABLA CUENTA
-- ================================================
DROP TABLE IF EXISTS CUENTA;
CREATE TABLE CUENTA(
ID_CUENTA INT(19) NOT NULL AUTO_INCREMENT,-- CLAVE PRIMARIA
USUARIO VARCHAR(50),
PASSWORD VARCHAR(50),
ROL VARCHAR(50),
ID_COLEGIADO INT(19), -- CLAVE FORANEA COLEGIADO

-- CAMPOS DE AUDITORIA
ESTADO VARCHAR(20),
FECHA_ALTA TIMESTAMP(6),
USUARIO_ALTA VARCHAR(20),
IP_ALTA VARCHAR(20),
FECHA_MODIFICACION TIMESTAMP(6),
USUARIO_MODIFICACION VARCHAR(20),
IP_MODIFICACION VARCHAR(20),
FECHA_BAJA TIMESTAMP(6),
USUARIO_BAJA VARCHAR(20),
IP_BAJA VARCHAR(20),
CONSTRAINT PK_ID_CUENTA PRIMARY KEY (ID_CUENTA),
CONSTRAINT FK_ID_COLEGIADO_CUEN FOREIGN KEY (ID_COLEGIADO) REFERENCES COLEGIADO (ID_COLEGIADO)
)ENGINE=INNODB;
